// Recursive C++ program to check
// if a string is subsequence
// of another string
#include <cstring>
#include <iostream>
using namespace std;

// Returns true if str1[] is a
// subsequence of str2[]. m is
// length of str1 and n is length of str2
bool isSubSequence(char str1[], char str2[],
								int m, int n)
{

	// Base Cases
	if (m == 0)
		return true;
	if (n == 0)
		return false;

	// If last characters of two
	// strings are matching
	if (str1[m - 1] == str2[n - 1])
		return isSubSequence(str1, str2, m - 1, n - 1);

	// If last characters are
	// not matching
	return isSubSequence(str1, str2, m, n - 1);
}

// Driver program to test methods of graph class
int main()
{
	char str1[] = "y00x0g000l00y00000hs0va0bgie0r00gcj00f0f00nv0000nz00q0f0s00000kt00000zin00y0d000cq0w0uc0000o0d0q0s00y0000xhb00000000j000000dl0ef00b0t000uz0j00j0n00j00w0000c0rwr00px0iii0vvpl000kp0gqnn0pm00000000d000000000000v00ukznv0l00000sf0nr000wk00x00000cfin00gyf0s0a0p00b0q000h000mp00wy0a0ey0000tp0f000000u0d0mw00000nstcx0t0000b0e00i00000ru0d000kma0l00c00x000000z0d00000000000000000c00000u00q00a0g000000eds0nnb0mp00000oac00qn000z00qm00u000t00o0acltpkey000000j0p00sh0zc00di0k000a00000b0000y00000000w0l000s0d0k0n0ii0000f0mgp000w00u0i0w0gtrjrv0s000j00i00j00j0vh00u0000f000ecjkjt0y000000000d000000mo0lvv00e00f0yk0000000gl0000n000b0yrt0jwn00n0z0kv00000d00m0d00e0aw000vnxx0k0pe0p000000k0f0000000cu000000k000000y0000oh000h0pnw00u00000x00000000ed00mm00nqpk0r00ok000000000000000fj0t0pnqo0icfq0000pw0pz000000000e00iwx0t0000000c0j0wr0t0000i00g000q0an00000gud00l0xn0r0b0i0mpe00a000c0p00000kebz0h0000000e000f000j000o0d0dq000e00000lb0000p000000qr0000000vt000f0e000000000000000s000z00i0000n0l0y000h0v0qzg0e000l0q000fa0vggwv00w000c00j0s00we00000t0000pt000yo0000c0000q0f000d00i0qkdz0ro00000xh0v0000gf00000oi000j0u000m000000fb000aj00s000zpo00rs00zna0irz000000tdve00y0000huy000n00000000q0ey0q0000fs000a00sa0qev00ktxxgc0000ljj000zirm000m000i0000000p0w0s00b0r0n000zxerttq00000dd0z0mv0o0fx00a0t000r00s0000hf0l000e00aba0e00m0000mfxdx000g000x0000n00d0r0w0h0qa0tw0i000ieqx000000j000ubmh000zh0i0uovr0ra000d00uqm00dxzhsj0lf0y00rd00nxk000000l0000j000000s0ts0u00hs000ma00wk0v0m00rjw0000pz00000d0y00ol00y0000qbic000a0r00q0w0d0000d0fzl0w000000t00oq000wq00vq000a0000000m0bz00pi000zr00000sip000i000h0y0000o0kz00m0000000b0tm00vw0w00yo00000x00vawugo00l00000ay0000r00d0scc0kcg000y00t00000vb00000v00y0000d00f0bxg000a00e0q00cdy0r000lqm0sy00n0000u00v0e00e00000l00o0w0000000o0zmu00rce0ei000ne0x00mw0hg0r00nxu0mr0ba0000n000r0p00xbtr0a0000000y0v0s0h00hu0gh0000iz0b000j0fzvvw0f0tvo0y00e0w0d0nua000qoo000xq00000p00000d0h000w00000j00c00q00000js00ajxq00000qte00qpi0000v0wr0s0ufwub0000l0000000i00000rh00000riu000000lqg0n0p0x00xx00vl00000q00d00a00ah0tg000sj00e00gdq0n00a0000000000i000oscj0ht00u0d00q0000r000d000d0bp00fr000000n0g0000ygl0t0xg0m0000z00xo000t00g0i0c0000ctn0000tnnan0abu0c0f000w0000k000bz0m0u00i0v0000000d0tkh0qx00000r000f00y00000t000o000z00kldt0000000x00i00p0000a00q0s00c0l0km00wm0l00k0000000p000w0k0zs000hdi000a00e0000ye0000g00000tu000000l00g00c00u000u0ex000sd0d00jlqf00x0t0j0p0i00dx0j0g0ztzb00000r0l0000h000v0aslm00gs0000xt0vs0000y00000mm00000g0q0000so00j00s000000lbd000000000ky00d0m00000pge00o000j0000k000se0i000000uz0j000ve000u0ve00vv0e0y000xal000q0000uj0000pn0k0urc0q0000g00t00u00b0svz00o0cg0j0g0pn00t00oixr0v000qzc00000000000r0s00ng0x00l0e0000u0uf00lndo0gjm00k0000000v000n00jk0s00qv0gd0o00oc0000000t00t00le0ndwh0dn0p00000hw0e0d0c0i0jow0bn0c000cx0000p0000f0wis00y00000n000000000wo00fz000uc000cy000000m00ad00b0000s0a00gs0sl0j0000000000r0lufh000m00000d00z00f00x00000000r00g00m000w00p00000k000000b0sn0000sio0sun0i000hirl00000b00f0urn0cg00to00000000000c000a00p0lq00s00000xdr0nbv00000000n000igdk00ze0j000x0g00000ost0vglz000w00t00foi0m0c0000wa0hb00000000v0g00000fc000v00x0v000sh000l0j0g00yce00m00000x000b0a00r00su000bb0bb00000xqc00e000000c00c0000yz00000000s0b000z0o0xvznt000h0sn0a00000e000n00i0000nb0000000n0zy000d0s00v0000z0e0e0fi000yt0r00qi00k0a00000000abk0000k0000d0l00wsn00000000prvww00llv000000j0x00w0000000b0uk0yfge0000000zpt00l0t000000r00e000f0000000gp0i00f0jc00j00v0000x00x00etg0a0x00j00agw00c0v00t0t0000b00b0b0s000u00000g0000000x000j000f000y00ev00mjs0zpa0000000i0rna0a0000fn00ir0000000a0ihk0xt000kf0t0y000b00000pcz000j0000micb0b0000v00d00h00b0pa0r000vz0o0000000sd000s0pwoh0000b0l000000000r0g000fm00i00z0wb0mfk000opw0e0ye0000000000v0o000qc0tr0fme00nx00000a0000k000wp00f0000000w0x0ng0yhlp0ly0a0d000fjytch000on0xm00vyv00f0k0eiww0syz0d0000b0000m0000y00i0jccuwvkc000kx0000ud0000zk0e00hv000000f000u00rf0ol00wr000000ox00000ipm00v00000j00x0q00hl000n000n0000d00n0000zk000v0000y0000j000xnld00v00000a000f00fky00d0d0qsrsf0asm000m0d000k000000jo0q0w000yhcs0m0aa00000kvl00000000t00000cp00000i0vug0e0x000g00000kb0f00w0v0kj00s00000zne00f00oo00000bt000000tx00n0000000j0000000ve0ibk0ij000aar0wim0b000ewn0j00000dt0os00r0d0es00mw0sg0wfm0r0m000000r0j0to00jbh0000000cjyp0z000000db0000000000r00von00y000ie0pi000000000r0zql00l00v0000e0000000i0000ve00r000j0s0k0h0d000h00oiy0b0e0z0b0he0g0ierbw0v0k0hf0zdq00j00000000u00e0u0q0azz000m00z0zd0b0n0eex000n0000b0w00ir000aw0wqwxv0000000ocv0000cz0z0oh0uzrd0b00q000xp00000ky0j0000z0bp000j0kyx0m0jbgb0usvy0quohu0000r0r000d00k0l00000q00000a00n000000000000s000b00ko00um00y0000aj00p0000i0t0o00e00z000m00000a0pyaw00000g0xp0f0ro00qnn00e00e00b00x0f0bu000gk00000000000000qmvuk0x0m00y00000r00p00000uu00000c00000000w00000f0pt0h0ts000zj000w0pxvg0h0l0c000hy0f00c0000dip0000jm0s000000000s0000n0x000c00uc00j000l0vg00vmc0000000p000m00p0000jtpx00a0000000lh00g000c0f0000n00h0k0z00000f0q0s0l0b00y000n00pp0ou000v0a00j0i00wn00x000000sw0000go0z0fy0g0nh000vd0yfrz000aunt";
	char str2[] = "yxglyhsvabgiergcjffnvnzqfsktzinydcqwucodqsyxhbjdlefbtuzjjnjwcrwrpxiiivvplkpgqnnpmdvukznvlsfnrwkxcfingyfsapbqhmpwyaeytpfudmwnstcxtbeirudkmalcxzdcuqagedsnnbmpoacqnzqmutoacltpkeyjpshzcdikabywlsdkniifmgpwuiwgtrjrvsjijjvhufecjkjtydmolvvefykglnbyrtjwnnzkvdmdeawvnxxkpepkfcukyohhpnwuxedmmnqpkrokfjtpnqoicfqpwpzeiwxtcjwrtigqangudlxnrbimpeacpkebzhefjoddqelbpqrvtfeszinlyhvqzgelqfavggwvwcjswetptyocqfdiqkdzroxhvgfoijumfbajszporsznairztdveyhuynqeyqfsasaqevktxxgcljjzirmmipwsbrnzxerttqddzmvofxatrshfleabaemmfxdxgxndrwhqatwiieqxjubmhzhiuovrraduqmdxzhsjlfyrdnxkljstsuhsmawkvmrjwpzdyolyqbicarqwddfzlwtoqwqvqambzpizrsipihyokzmbtmvwwyoxvawugolayrdscckcgytvbvydfbxgaeqcdyrlqmsynuveelowozmurceeinexmwhgrnxumrbanrpxbtrayvshhughizbjfzvvwftvoyewdnuaqooxqpdhwjcqjsajxqqteqpivwrsufwublirhriulqgnpxxxvlqdaahtgsjegdqnaioscjhtudqrddbpfrngygltxgmzxotgicctntnnanabucfwkbzmuivdtkhqxrfytozkldtxipaqsclkmwmlkpwkzshdiaeyegtulgcuuexsddjlqfxtjpidxjgztzbrlhvaslmgsxtvsymmgqsojslbdkydmpgeojkseiuzjveuvevveyxalqujpnkurcqgtubsvzocgjgpntoixrvqzcrsngxleuuflndogjmkvnjksqvgdoocttlendwhdnphwedcijowbnccxpfwisynwofzuccymadbsagssljrlufhmdzfxrgmwpkbsnsiosunihirlbfurncgtocaplqsxdrnbvnigdkzejxgostvglzwtfoimcwahbvgfcvxvshljgycemxbarsubbbbxqceccyzsbzoxvznthsnaeninbnzydsvzeefiytrqikaabkkdlwsnprvwwllvjxwbukyfgezptltrefgpifjcjvxxetgaxjagwcvttbbbsugxjfyevmjszpairnaafniraihkxtkftybpczjmicbbvdhbparvzosdspwohblrgfmizwbmfkopweyevoqctrfmenxakwpfwxngyhlplyadfjytchonxmvyvfkeiwwsyzdbmyijccuwvkckxudzkehvfurfolwroxipmvjxqhlnndnzkvyjxnldvaffkyddqsrsfasmmdkjoqwyhcsmaakvltcpivugexgkbfwvkjsznefoobttxnjveibkijaarwimbewnjdtosrdesmwsgwfmrmrjtojbhcjypzdbrvonyiepirzqllveiverjskhdhoiybezbhegierbwvkhfzdqjueuqazzmzzdbneexnbwirawwqwxvocvczzohuzrdbqxpkyjzbpjkyxmjbgbusvyquohurrdklqansbkoumyajpitoezmapyawgxpfroqnneebxfbugkqmvukxmyrpuucwfpthtszjwpxvghlchyfcdipjmssnxcucjlvgvmccpmpjtpxalhgcfnhkzfqslbynppouvajiwnxswgozfygnhvdyfrzaunt";
	int m = strlen(str1);
	int n = strlen(str2);
	isSubSequence(str1, str2, m, n) ? cout << "Yes "
									: cout << "No";
	return 0;
}
